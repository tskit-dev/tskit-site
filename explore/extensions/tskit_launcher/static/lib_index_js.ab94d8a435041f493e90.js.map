{"version":3,"file":"lib_index_js.ab94d8a435041f493e90.js","mappings":"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","sources":["webpack://tskit_launcher/./src/index.ts"],"sourcesContent":["import {\n  JupyterFrontEnd,\n  JupyterFrontEndPlugin,\n  ILayoutRestorer\n} from '@jupyterlab/application';\n\nimport { Widget } from '@lumino/widgets';\nimport { ILauncher } from '@jupyterlab/launcher';\n\n/**\n * Configuration for content hash checking\n */\ninterface ContentConfig {\n  contentHash: string;\n  lastUpdated: string;\n  version?: string;\n}\n\n/**\n * Custom Launcher Widget with Update Detection\n */\nclass CustomLauncher extends Widget implements ILauncher {\n  private app: JupyterFrontEnd | null = null;\n  private contentConfig: ContentConfig | null = null;\n  private readonly STORAGE_KEY = 'tskit-launcher-content-hash';\n  private readonly CONFIG_URL = './content-config.json'; \n\n  constructor() {\n    super();\n    this.addClass('jp-Launcher');\n    this.id = 'launcher';\n    this.title.label = 'Welcome';\n    this.title.iconClass = 'jp-LauncherIcon';\n\n    this.createUI();\n    this.checkForUpdates();\n  }\n\n  private createUI(): void {\n    this.node.innerHTML = `\n      <div class=\"jp-Launcher-body tskit-launcher\">\n        <div class=\"jp-Launcher-content\">\n\n          <div class=\"tskit-header\">\n            <img src=\"https://raw.githubusercontent.com/tskit-dev/administrative/refs/heads/main/logos/svg/tskit/Tskit_logo.eps.svg\" alt=\"tskit logo\" class=\"tskit-logo\" />\n            <h1>explore</h1>\n            <p>Interactive tree sequence notebooks</p>\n          </div>\n\n          <div class=\"tskit-update-warning\" id=\"update-warning\" style=\"display: none;\">\n            <div class=\"tskit-warning-content\">\n              <div class=\"tskit-warning-icon\">⚠️</div>\n              <div class=\"tskit-warning-text\">\n                <strong>Notebooks Updated!</strong>\n                <p>You can update to them, but it will overwrite any local changes you have made.</p>\n              </div>\n              <button class=\"tskit-reset-button\" id=\"reset-button\">\n                Reset Notebooks and Data\n              </button>\n            </div>\n          </div>\n\n          <div class=\"jp-Launcher-section\">\n            <div class=\"jp-Launcher-sectionHeader\">\n              <h2>Section heading</h2>\n            </div>\n            <div class=\"jp-Launcher-cardContainer\">\n              <div class=\"jp-LauncherCard tskit-card\" id=\"tskit-notebook\">\n                <div class=\"jp-LauncherCard-icon\">\n                  <svg width=\"32\" height=\"32\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-5 14H7v-2h7v2zm3-4H7v-2h10v2zm0-4H7V7h10v2z\" fill=\"#204e66\"/>\n                  </svg>\n                </div>\n                <div class=\"tskit-card-content\">\n                  <div class=\"jp-LauncherCard-label\">Open tskit Tutorial</div>\n                  <div class=\"jp-LauncherCard-description\">Explore tree sequence analysis</div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n    `;\n\n    this.setupEventHandlers();\n  }\n\n  private setupEventHandlers(): void {\n    const notebookCard = this.node.querySelector('#tskit-notebook');\n    if (notebookCard) {\n      notebookCard.addEventListener('click', () => {\n        this.app?.commands.execute('docmanager:open', {\n          path: 'tskit.ipynb'\n        });\n      });\n    }\n\n    const resetButton = this.node.querySelector('#reset-button');\n    if (resetButton) {\n      resetButton.addEventListener('click', () => {\n        this.resetLocalState();\n      });\n    }\n  }\n\n  private async checkForUpdates(): Promise<void> {\n    try {\n      // Fetch current content configuration\n      const response = await fetch(this.CONFIG_URL);\n      if (!response.ok) {\n        console.warn('Could not fetch content configuration');\n        return;\n      }\n\n      this.contentConfig = await response.json();\n      \n      // Get stored hash from localStorage\n      const storedData = localStorage.getItem(this.STORAGE_KEY);\n      const storedConfig = storedData ? JSON.parse(storedData) : null;\n\n      // Check if content has been updated\n      if (this.contentConfig && storedConfig && storedConfig.contentHash !== this.contentConfig.contentHash) {\n        this.showUpdateWarning();\n      } else if (!storedConfig) {\n        // First time visit - store the current hash\n        this.storeCurrentHash();\n      }\n    } catch (error) {\n      console.warn('Error checking for content updates:', error);\n    }\n  }\n\n  private showUpdateWarning(): void {\n    const warningElement = this.node.querySelector('#update-warning') as HTMLElement;\n    if (warningElement) {\n      warningElement.style.display = 'block';\n    }\n  }\n\n  private storeCurrentHash(): void {\n    if (this.contentConfig) {\n      localStorage.setItem(this.STORAGE_KEY, JSON.stringify(this.contentConfig));\n    }\n  }\n\n  private resetLocalState(): void {\n    try {\n      // Clear JupyterLite state\n      this.clearJupyterLiteState();\n      \n      // Update stored hash\n      this.storeCurrentHash();\n      \n      // Force refresh\n      window.location.reload();\n    } catch (error) {\n      console.error('Error resetting local state:', error);\n      // Fallback: just reload\n      window.location.reload();\n    }\n  }\n\n  private clearJupyterLiteState(): void {\n    // Clear JupyterLite-specific localStorage items\n    const keysToRemove: string[] = [];\n    \n    for (let i = 0; i < localStorage.length; i++) {\n      const key = localStorage.key(i);\n      if (key && (\n        key.startsWith('jupyter-') || \n        key.startsWith('jupyterlab-') ||\n        key.startsWith('lumino-') ||\n        key.includes('notebook') ||\n        key.includes('kernel')\n      )) {\n        keysToRemove.push(key);\n      }\n    }\n\n    keysToRemove.forEach(key => {\n      localStorage.removeItem(key);\n    });\n\n    // Clear IndexedDB databases used by JupyterLite\n    this.clearIndexedDBDatabases();\n  }\n\n  private clearIndexedDBDatabases(): void {\n    // Common JupyterLite IndexedDB database names\n    const dbNames = [\n      'JupyterLite Storage',\n      'jupyter-config-data',\n      'jupyter-lab-workspaces',\n      'pyodide-packages'\n    ];\n\n    dbNames.forEach(dbName => {\n      const deleteRequest = indexedDB.deleteDatabase(dbName);\n      deleteRequest.onerror = () => {\n        console.warn(`Could not delete database: ${dbName}`);\n      };\n    });\n  }\n\n  setApp(app: JupyterFrontEnd): void {\n    this.app = app;\n  }\n\n  // Implement ILauncher interface methods\n  add(options: any): any {\n    return { dispose: () => {} };\n  }\n}\n\n/**\n * The launcher plugin.\n */\nconst launcher: JupyterFrontEndPlugin<ILauncher> = {\n  id: 'tskit_launcher:plugin',\n  description: 'Tskit custom launcher',\n  provides: ILauncher,\n  requires: [],\n  optional: [ILayoutRestorer],\n  activate: (\n    app: JupyterFrontEnd,\n    restorer: ILayoutRestorer | null\n  ): ILauncher => {\n    const { shell } = app;\n\n    const launcher = new CustomLauncher();\n    launcher.setApp(app);\n\n    shell.add(launcher, 'main');\n\n    if (restorer) {\n      restorer.add(launcher, 'launcher');\n    }\n\n    return launcher;\n  },\n  autoStart: true\n};\n\nexport default launcher;"],"names":[],"sourceRoot":""}